(function(e,h){"object"===typeof exports&&"undefined"!==typeof module?module.exports=h():"function"===typeof define&&define.amd?define(h):function(){const k=e.Base64,l=h();l.noConflict=()=>{e.Base64=k;return l};e.Meteor&&(Base64=l);e.Base64=l}()})("undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof global?global:this,function(){var e="function"===typeof atob,h="function"===typeof btoa;const k="function"===typeof Buffer,l="function"===typeof TextDecoder?new TextDecoder:
void 0,A="function"===typeof TextEncoder?new TextEncoder:void 0,p=[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],q=(a=>{let b={};a.forEach((c,f)=>b[c]=f);return b})(p),O=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,d=String.fromCharCode.bind(String),B="function"===typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):(a,b=c=>c)=>new Uint8Array(Array.prototype.slice.call(a,0).map(b)),C=a=>a.replace(/[+\/]/g,b=>"+"==b?"-":"_").replace(/=+$/m,
""),D=a=>{var b;let c,f,m="";const g=a.length%3;for(let r=0;r<a.length;){if(255<(b=a.charCodeAt(r++))||255<(c=a.charCodeAt(r++))||255<(f=a.charCodeAt(r++)))throw new TypeError("invalid character found");b=b<<16|c<<8|f;m+=p[b>>18&63]+p[b>>12&63]+p[b>>6&63]+p[b&63]}return g?m.slice(0,g-3)+"===".substring(g):m},w=h?a=>btoa(a):k?a=>Buffer.from(a,"binary").toString("base64"):D,x=k?a=>Buffer.from(a).toString("base64"):a=>{let b=[];for(let c=0,f=a.length;c<f;c+=4096)b.push(d.apply(null,a.subarray(c,c+4096)));
return w(b.join(""))},t=(a,b=!1)=>b?C(x(a)):x(a),E=a=>{if(2>a.length){var b=a.charCodeAt(0);return 128>b?a:2048>b?d(192|b>>>6)+d(128|b&63):d(224|b>>>12&15)+d(128|b>>>6&63)+d(128|b&63)}b=65536+1024*(a.charCodeAt(0)-55296)+(a.charCodeAt(1)-56320);return d(240|b>>>18&7)+d(128|b>>>12&63)+d(128|b>>>6&63)+d(128|b&63)},F=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,G=k?a=>Buffer.from(a,"utf8").toString("base64"):A?a=>x(A.encode(a)):a=>w(a.replace(F,E)),n=(a,b=!1)=>b?C(G(a)):G(a);h=a=>n(a,!0);const H=
/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,I=a=>{switch(a.length){case 4:return a=((7&a.charCodeAt(0))<<18|(63&a.charCodeAt(1))<<12|(63&a.charCodeAt(2))<<6|63&a.charCodeAt(3))-65536,d((a>>>10)+55296)+d((a&1023)+56320);case 3:return d((15&a.charCodeAt(0))<<12|(63&a.charCodeAt(1))<<6|63&a.charCodeAt(2));default:return d((31&a.charCodeAt(0))<<6|63&a.charCodeAt(1))}},J=a=>{a=a.replace(/\s+/g,"");if(!O.test(a))throw new TypeError("malformed base64.");a+="==".slice(2-
(a.length&3));let b,c="",f,m;for(let g=0;g<a.length;)b=q[a.charAt(g++)]<<18|q[a.charAt(g++)]<<12|(f=q[a.charAt(g++)])<<6|(m=q[a.charAt(g++)]),c+=64===f?d(b>>16&255):64===m?d(b>>16&255,b>>8&255):d(b>>16&255,b>>8&255,b&255);return c},y=e?a=>atob(a.replace(/[^A-Za-z0-9\+\/]/g,"")):k?a=>Buffer.from(a,"base64").toString("binary"):J,z=k?a=>B(Buffer.from(a,"base64")):a=>B(y(a),b=>b.charCodeAt(0)),K=k?a=>Buffer.from(a,"base64").toString("utf8"):l?a=>l.decode(z(a)):a=>y(a).replace(H,I),u=a=>a.replace(/[-_]/g,
b=>"-"==b?"+":"/").replace(/[^A-Za-z0-9\+\/]/g,"");e=a=>K(u(a));const L=a=>({value:a,enumerable:!1,writable:!0,configurable:!0}),M=function(){const a=(b,c)=>Object.defineProperty(String.prototype,b,L(c));a("fromBase64",function(){return K(u(this))});a("toBase64",function(b){return n(this,b)});a("toBase64URI",function(){return n(this,!0)});a("toBase64URL",function(){return n(this,!0)});a("toUint8Array",function(){return z(u(this))})},N=function(){const a=(b,c)=>Object.defineProperty(Uint8Array.prototype,
b,L(c));a("toBase64",function(b){return t(this,b)});a("toBase64URI",function(){return t(this,!0)});a("toBase64URL",function(){return t(this,!0)})},v={version:"3.6.0",VERSION:"3.6.0",atob:y,atobPolyfill:J,btoa:w,btoaPolyfill:D,fromBase64:e,toBase64:n,encode:n,encodeURI:h,encodeURL:h,utob:a=>a.replace(F,E),btou:a=>a.replace(H,I),decode:e,isValid:a=>{if("string"!==typeof a)return!1;a=a.replace(/\s+/g,"").replace(/=+$/,"");return!/[^\s0-9a-zA-Z\+/]/.test(a)||!/[^\s0-9a-zA-Z\-_]/.test(a)},fromUint8Array:t,
toUint8Array:a=>z(u(a)),extendString:M,extendUint8Array:N,extendBuiltins:()=>{M();N()},Base64:{}};Object.keys(v).forEach(a=>v.Base64[a]=v[a]);return v});
